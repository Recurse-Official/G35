services:
  web:
    image: nginx
    container_name: web
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - elastic
    depends_on:
      # - frontend
      - backend

  # frontend:
  #   build:
  #     context: ./services/frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
    # ports:
      # - 3000:3000
    # networks:
    #   - elastic
    # environment:
    #   - BACKEND_URL=http://localhost

  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    networks:
      - elastic
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=food
  
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - 3306:3306
    networks:
      - elastic
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: food
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: --max_connections=500 --innodb_buffer_pool_size=2G

networks:
  elastic:
    driver: bridge

volumes:
  mysql-data: